// <auto-generated />
using System;
using GFS.GrailCommon.Models;
using GFS.Portfolio.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GFS.Portfolio.DAL.Migrations
{
    [DbContext(typeof(PortfolioDbContext))]
    partial class PortfolioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GFS.Portfolio.DAL.Entities.OperationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AssetDealPrice")
                        .HasColumnType("numeric");

                    b.Property<AssetIdentifier>("AssetIdentifier")
                        .HasColumnType("jsonb");

                    b.Property<int?>("AssetLotsChange")
                        .HasColumnType("integer");

                    b.Property<decimal>("CashChange")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("MomentUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OperationType")
                        .HasColumnType("integer");

                    b.Property<Guid>("PortfolioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Operations", (string)null);
                });

            modelBuilder.Entity("GFS.Portfolio.DAL.Entities.PortfolioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Portfolios", (string)null);
                });

            modelBuilder.Entity("GFS.Portfolio.DAL.Entities.OperationEntity", b =>
                {
                    b.HasOne("GFS.Portfolio.DAL.Entities.PortfolioEntity", "Portfolio")
                        .WithMany("Operations")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("GFS.Portfolio.DAL.Entities.PortfolioEntity", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
